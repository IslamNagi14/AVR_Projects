
TWO_LED_usingButton.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000003b4  00000000  00000000  00000214  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      0000066f  00000000  00000000  000005c8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 dd 00 	jmp	0x1ba	; 0x1ba <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define PINA	*((volatile u8*)0x39)
#define DDRB	*((u8*)0x37)
#define PORTB	*((u8*)0x38)
#define PINB	*((volatile u8*)0x36)
int main()
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DDRA |=(1<<0); //pin0 in porta is output
  74:	aa e3       	ldi	r26, 0x3A	; 58
  76:	b0 e0       	ldi	r27, 0x00	; 0
  78:	ea e3       	ldi	r30, 0x3A	; 58
  7a:	f0 e0       	ldi	r31, 0x00	; 0
  7c:	80 81       	ld	r24, Z
  7e:	81 60       	ori	r24, 0x01	; 1
  80:	8c 93       	st	X, r24
	DDRA |=(1<<1); //pin1 in porta is output
  82:	aa e3       	ldi	r26, 0x3A	; 58
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	ea e3       	ldi	r30, 0x3A	; 58
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	82 60       	ori	r24, 0x02	; 2
  8e:	8c 93       	st	X, r24
	//PORTA &=~(1<<0);//initialize leds off
	//PORTA &=~(1<<1);//initialize leds off
    PORTA = 0;
  90:	eb e3       	ldi	r30, 0x3B	; 59
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	10 82       	st	Z, r1
	DDRB &=~(1<<0);//pin0 in portb is input
  96:	a7 e3       	ldi	r26, 0x37	; 55
  98:	b0 e0       	ldi	r27, 0x00	; 0
  9a:	e7 e3       	ldi	r30, 0x37	; 55
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	80 81       	ld	r24, Z
  a0:	8e 7f       	andi	r24, 0xFE	; 254
  a2:	8c 93       	st	X, r24
	DDRB &=~(1<<1);//pin1 in portb is input
  a4:	a7 e3       	ldi	r26, 0x37	; 55
  a6:	b0 e0       	ldi	r27, 0x00	; 0
  a8:	e7 e3       	ldi	r30, 0x37	; 55
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	80 81       	ld	r24, Z
  ae:	8d 7f       	andi	r24, 0xFD	; 253
  b0:	8c 93       	st	X, r24
	DDRB &=~(1<<2);//pin2 in portb is input
  b2:	a7 e3       	ldi	r26, 0x37	; 55
  b4:	b0 e0       	ldi	r27, 0x00	; 0
  b6:	e7 e3       	ldi	r30, 0x37	; 55
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	8b 7f       	andi	r24, 0xFB	; 251
  be:	8c 93       	st	X, r24
	PORTB |=(1<<0);//sw is pulled_up
  c0:	a8 e3       	ldi	r26, 0x38	; 56
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	e8 e3       	ldi	r30, 0x38	; 56
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	81 60       	ori	r24, 0x01	; 1
  cc:	8c 93       	st	X, r24
	PORTB |=(1<<1);//sw is pulled_up
  ce:	a8 e3       	ldi	r26, 0x38	; 56
  d0:	b0 e0       	ldi	r27, 0x00	; 0
  d2:	e8 e3       	ldi	r30, 0x38	; 56
  d4:	f0 e0       	ldi	r31, 0x00	; 0
  d6:	80 81       	ld	r24, Z
  d8:	82 60       	ori	r24, 0x02	; 2
  da:	8c 93       	st	X, r24
	PORTB |=(1<<2);//sw is pulled_up
  dc:	a8 e3       	ldi	r26, 0x38	; 56
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	e8 e3       	ldi	r30, 0x38	; 56
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	84 60       	ori	r24, 0x04	; 4
  e8:	8c 93       	st	X, r24
	while(1)
	{
		PORTA &=~(1<<0);
  ea:	ab e3       	ldi	r26, 0x3B	; 59
  ec:	b0 e0       	ldi	r27, 0x00	; 0
  ee:	eb e3       	ldi	r30, 0x3B	; 59
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	8e 7f       	andi	r24, 0xFE	; 254
  f6:	8c 93       	st	X, r24
		PORTA &=~(1<<1);
  f8:	ab e3       	ldi	r26, 0x3B	; 59
  fa:	b0 e0       	ldi	r27, 0x00	; 0
  fc:	eb e3       	ldi	r30, 0x3B	; 59
  fe:	f0 e0       	ldi	r31, 0x00	; 0
 100:	80 81       	ld	r24, Z
 102:	8d 7f       	andi	r24, 0xFD	; 253
 104:	8c 93       	st	X, r24
		if(!((PINB>>0)&1))
 106:	e6 e3       	ldi	r30, 0x36	; 54
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	88 2f       	mov	r24, r24
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	81 70       	andi	r24, 0x01	; 1
 112:	90 70       	andi	r25, 0x00	; 0
 114:	00 97       	sbiw	r24, 0x00	; 0
 116:	81 f4       	brne	.+32     	; 0x138 <main+0xcc>
		{
			PORTA |=(1<<0);
 118:	ab e3       	ldi	r26, 0x3B	; 59
 11a:	b0 e0       	ldi	r27, 0x00	; 0
 11c:	eb e3       	ldi	r30, 0x3B	; 59
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	81 60       	ori	r24, 0x01	; 1
 124:	8c 93       	st	X, r24
			while(!((PINB>>0)&1));
 126:	e6 e3       	ldi	r30, 0x36	; 54
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	88 2f       	mov	r24, r24
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	81 70       	andi	r24, 0x01	; 1
 132:	90 70       	andi	r25, 0x00	; 0
 134:	00 97       	sbiw	r24, 0x00	; 0
 136:	b9 f3       	breq	.-18     	; 0x126 <main+0xba>
		}

		if(!((PINB>>1)&1))
 138:	e6 e3       	ldi	r30, 0x36	; 54
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	86 95       	lsr	r24
 140:	88 2f       	mov	r24, r24
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	81 70       	andi	r24, 0x01	; 1
 146:	90 70       	andi	r25, 0x00	; 0
 148:	00 97       	sbiw	r24, 0x00	; 0
 14a:	89 f4       	brne	.+34     	; 0x16e <main+0x102>
		{

			PORTA |=(1<<1);
 14c:	ab e3       	ldi	r26, 0x3B	; 59
 14e:	b0 e0       	ldi	r27, 0x00	; 0
 150:	eb e3       	ldi	r30, 0x3B	; 59
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	80 81       	ld	r24, Z
 156:	82 60       	ori	r24, 0x02	; 2
 158:	8c 93       	st	X, r24
			while(!((PINB>>1)&1));
 15a:	e6 e3       	ldi	r30, 0x36	; 54
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	86 95       	lsr	r24
 162:	88 2f       	mov	r24, r24
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	81 70       	andi	r24, 0x01	; 1
 168:	90 70       	andi	r25, 0x00	; 0
 16a:	00 97       	sbiw	r24, 0x00	; 0
 16c:	b1 f3       	breq	.-20     	; 0x15a <main+0xee>

		}
		if(!((PINB>>2)&1))
 16e:	e6 e3       	ldi	r30, 0x36	; 54
 170:	f0 e0       	ldi	r31, 0x00	; 0
 172:	80 81       	ld	r24, Z
 174:	86 95       	lsr	r24
 176:	86 95       	lsr	r24
 178:	88 2f       	mov	r24, r24
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	81 70       	andi	r24, 0x01	; 1
 17e:	90 70       	andi	r25, 0x00	; 0
 180:	00 97       	sbiw	r24, 0x00	; 0
 182:	09 f0       	breq	.+2      	; 0x186 <main+0x11a>
 184:	b2 cf       	rjmp	.-156    	; 0xea <main+0x7e>
		{
			PORTA |=(1<<0);
 186:	ab e3       	ldi	r26, 0x3B	; 59
 188:	b0 e0       	ldi	r27, 0x00	; 0
 18a:	eb e3       	ldi	r30, 0x3B	; 59
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	81 60       	ori	r24, 0x01	; 1
 192:	8c 93       	st	X, r24
			PORTA |=(1<<1);
 194:	ab e3       	ldi	r26, 0x3B	; 59
 196:	b0 e0       	ldi	r27, 0x00	; 0
 198:	eb e3       	ldi	r30, 0x3B	; 59
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	80 81       	ld	r24, Z
 19e:	82 60       	ori	r24, 0x02	; 2
 1a0:	8c 93       	st	X, r24
			while(!((PINB>>2)&1));
 1a2:	e6 e3       	ldi	r30, 0x36	; 54
 1a4:	f0 e0       	ldi	r31, 0x00	; 0
 1a6:	80 81       	ld	r24, Z
 1a8:	86 95       	lsr	r24
 1aa:	86 95       	lsr	r24
 1ac:	88 2f       	mov	r24, r24
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	81 70       	andi	r24, 0x01	; 1
 1b2:	90 70       	andi	r25, 0x00	; 0
 1b4:	00 97       	sbiw	r24, 0x00	; 0
 1b6:	a9 f3       	breq	.-22     	; 0x1a2 <main+0x136>
 1b8:	98 cf       	rjmp	.-208    	; 0xea <main+0x7e>

000001ba <_exit>:
 1ba:	f8 94       	cli

000001bc <__stop_program>:
 1bc:	ff cf       	rjmp	.-2      	; 0x1bc <__stop_program>
